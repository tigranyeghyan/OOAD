Messaging Application
1. User
	Fields:
		std::string name
		std::string contactInfo
		std::vector<Conversation*> conversations (Raw pointers to Conversation)
	Methods:
		void createConversation(const User& user)
		void manageSettings()
		std::vector<Conversation*> getConversations() const
2. Conversation
	Fields:
		std::vector<User*> participants (Raw pointers to User)
		std::vector<Message*> messageHistory (Raw pointers to Message)
	Methods:
		void addMessage(Message* message)
		void addUser(User* user)
		std::vector<Message*> getMessages() const
3. Message (Abstract Base Class)
	Fields:
		User* sender (Raw pointer to User sending the message)
		Conversation* conversation (Pointer to the conversation)
		std::chrono::time_point timestamp
	Methods:
		virtual void displayContent() const = 0
		virtual std::string getMessageType() const = 0
		Virtual destructor
4. TextMessage (Derived from Message)
	Fields:
		std::string content
	Methods:
		Override displayContent(): Displays the text message.
		Override getMessageType(): Returns "Text".
5. MultimediaMessage (Derived from Message)
	Fields:
		std::string filePath
		std::string mediaType
	Methods:
		Override displayContent(): Displays the multimedia content.
		Override getMessageType(): Returns the media type (e.g., "Image", "Video").
6. MessagingManager ( Interface )
	Methods:
		virtual void sendMessage(Message* message) = 0
		virtual void receiveMessage(Message* message) = 0
		virtual std::vector<Message*> viewConversationHistory(Conversation* conversation) const = 0

Relationships

	User and Conversation: A User can participate in multiple Conversation objects.
Conversation and Messages: Conversations store the message history as a vector of raw Message* pointers.
Message Inheritance: Message is inherited by TextMessage and MultimediaMessage, allowing polymorphic behavior through raw Message* pointers.
MessagingManager Interface: Defines messaging operations that are implemented by classes User for sending and receiving messages.

